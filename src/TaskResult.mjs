// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Result from "@rescript/core/src/Core__Result.mjs";

function fromIO(ta) {
  return {
          TAG: "Task",
          _0: (async function () {
              return ta();
            })
        };
}

function fromPromise(ta) {
  return {
          TAG: "Task",
          _0: ta
        };
}

function tryCatch(ta, onRejected) {
  return {
          TAG: "Task",
          _0: (async function () {
              try {
                var res = await ta();
                return {
                        TAG: "Ok",
                        _0: res
                      };
              }
              catch (exn){
                return {
                        TAG: "Error",
                        _0: onRejected()
                      };
              }
            })
        };
}

function run(ta) {
  return ta._0();
}

function map(ta, fab) {
  return {
          TAG: "Task",
          _0: (async function () {
              var a = await run(ta);
              if (a.TAG === "Ok") {
                return {
                        TAG: "Ok",
                        _0: fab(a._0)
                      };
              } else {
                return {
                        TAG: "Error",
                        _0: a._0
                      };
              }
            })
        };
}

function mapError(ta, feb) {
  return {
          TAG: "Task",
          _0: (async function () {
              var a = await run(ta);
              if (a.TAG === "Ok") {
                return {
                        TAG: "Ok",
                        _0: a._0
                      };
              } else {
                return {
                        TAG: "Error",
                        _0: feb(a._0)
                      };
              }
            })
        };
}

function chain(ta, fab) {
  return {
          TAG: "Task",
          _0: (async function () {
              var a = await run(ta);
              if (a.TAG === "Ok") {
                return await run(fab(a._0));
              } else {
                return {
                        TAG: "Error",
                        _0: a._0
                      };
              }
            })
        };
}

function chainFirst(ta, fab) {
  return {
          TAG: "Task",
          _0: (async function () {
              var a = await run(ta);
              if (a.TAG !== "Ok") {
                return {
                        TAG: "Error",
                        _0: a._0
                      };
              }
              var a$1 = a._0;
              var fabResult = await run(fab(a$1));
              if (fabResult.TAG === "Ok") {
                return {
                        TAG: "Ok",
                        _0: a$1
                      };
              } else {
                return {
                        TAG: "Error",
                        _0: fabResult._0
                      };
              }
            })
        };
}

function chainResult(ta, fab) {
  return {
          TAG: "Task",
          _0: (async function () {
              var aResult = await run(ta);
              return Core__Result.flatMap(aResult, fab);
            })
        };
}

var T;

export {
  T ,
  fromIO ,
  fromPromise ,
  tryCatch ,
  run ,
  map ,
  mapError ,
  chain ,
  chainFirst ,
  chainResult ,
}
/* No side effect */
