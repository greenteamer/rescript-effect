// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

function fromIO(ta) {
  return {
          TAG: "Task",
          _0: (async function () {
              return ta();
            })
        };
}

function fromPromise(ta) {
  return {
          TAG: "Task",
          _0: ta
        };
}

function run(ta) {
  try {
    return ta._0();
  }
  catch (raw_obj){
    var obj = Caml_js_exceptions.internalToOCamlException(raw_obj);
    if (obj.RE_EXN_ID === Js_exn.$$Error) {
      var helpText = "[Task] can't throw. ";
      var msg = obj._1.message;
      var msg$1 = msg !== undefined ? helpText + msg : helpText + "unknown error.";
      console.error(msg$1);
      return Js_exn.raiseError(msg$1);
    }
    throw obj;
  }
}

function map(ta, fab) {
  return {
          TAG: "Task",
          _0: (async function () {
              var a = await run(ta);
              return fab(a);
            })
        };
}

function chain(ta, fab) {
  return {
          TAG: "Task",
          _0: (async function () {
              var a = await run(ta);
              return await run(fab(a));
            })
        };
}

function chainFirst(ta, fab) {
  return {
          TAG: "Task",
          _0: (async function () {
              var a = await run(ta);
              await run(fab(a));
              return a;
            })
        };
}

export {
  fromIO ,
  fromPromise ,
  run ,
  map ,
  chain ,
  chainFirst ,
}
/* No side effect */
